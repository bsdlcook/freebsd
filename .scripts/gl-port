#!/bin/sh

# shellcheck source=/dev/null
. "/usr/home/${USER}/.config/gitlab"

readonly PREFIX=/usr/local
readonly GIT=${PREFIX}/bin/git
readonly SVN=${PREFIX}/bin/svn
readonly XQ=${PREFIX}/bin/xq

readonly MKDIR=/bin/mkdir
readonly CAT=/bin/cat
readonly ECHO=/bin/echo
readonly RM=/bin/rm
readonly AWK=/usr/bin/awk
readonly FIND=/usr/bin/find
readonly MKTEMP=/usr/bin/mktemp
readonly PATCH=/usr/bin/patch
readonly TR=/usr/bin/tr
readonly WC=/usr/bin/wc
readonly XARGS=/usr/bin/xargs

readonly BLUE="\033[34m"
readonly RESET="\033[0m"

usage() {
	${ECHO} "usage: gl-port [-u update | -a add] [-s show-diff] [-p port] [-c category] [-l log-limit] [-e log-entry] [-m commit-message] [-d port-dir]"
	exit 1
}

if [ $# -lt 2 ]; then
	usage
fi

DIR=${GITLABDIR}/ports
ENTRY=1
LIMIT=2
while getopts "p:c:l:e:m:d:uas" OPT; do
	case "${OPT}" in
		p) readonly PORT="${OPTARG}" ;;
		c) readonly CATEGORY="${OPTARG}" ;;
		l) readonly LIMIT="${OPTARG}" ;;
		e) readonly ENTRY="${OPTARG}" ;;
		m) readonly COMMIT="${OPTARG}" ;;
		d) readonly DIR="${OPTARG}" ;;
		u) readonly UPDATE=true ;;
		a) readonly ADD=true ;;
		s) readonly SHOW=true ;;
		*) usage ;;
	esac
done

print_info() {
	if [ -z "${SHOW}" ]; then
		printf "INFO: %b%s%b\n" "${BLUE}" "$*" "${RESET}"
	fi
}

if [ -z "${UPDATE}" ] && [ -z "${ADD}" ] || [ -z "${PORT}" ] || [ -z "${CATEGORY}" ]; then
	usage
fi

if [ ! -d "${DIR}" ]; then
	${ECHO} "'${DIR}' is not a valid directory"
	exit 1
fi

readonly PORTPATH="${DIR}/${CATEGORY}/${PORT}"
if [ "${UPDATE}" = true ] && [ ! -d "${PORTPATH}" ]; then
	${ECHO} "'${CATEGORY}/${PORT}' is not a valid port"
	exit 1
fi

readonly TMP=$(${MKTEMP} -d)
readonly DIFF="${TMP}/${PORT}.diff"
(
	cd "${TMP}" || exit

	print_info "Checking out latest SVN revision @ ${CATEGORY}/${PORT}"
	${SVN} checkout --depth empty "https://svn.FreeBSD.org/ports/head/${CATEGORY}/${PORT}" . 1> /dev/null

	REVISION=0
	if [ "${UPDATE}" = true ]; then
		REVISION=$(${SVN} log -l"${LIMIT}" --xml | ${XQ} -r '.[].logentry['"${ENTRY}"']."@revision"')
		${ECHO} "${REVISION}" | ${XARGS} -I % svn diff -r %:HEAD > "${DIFF}"
	else
		${SVN} diff -r 0:HEAD > "${DIFF}"
	fi
	print_info "Generating diff via commit(s) ${REVISION}:HEAD"
)

if [ "${SHOW}" = true ]; then
	${CAT} "${DIFF}"
	exit 0
fi

if [ "${ADD}" = true ]; then
	${MKDIR} -p "${PORTPATH}"
fi
(
	cd "${PORTPATH}" || exit

	print_info "Patching ${CATEGORY}/${PORT}"
	${PATCH} -p0 -s < "${DIFF}"
	${FIND} . -name "*.orig" -exec rm -f {} \;
)

if [ "${ADD}" = true ]; then
	readonly REVISION=$(cd "${TMP}" && ${SVN} log -r 0:HEAD -l1 --xml | ${XQ} -r '.log.logentry."@revision"')
else
	readonly REVISION=$(cd "${TMP}" && ${SVN} log -l1 --xml | ${XQ} -r '.log.logentry."@revision"')
fi
readonly PORTSET="https://svnweb.freebsd.org/ports?view=revision&revision=${REVISION}"
readonly VERSION=$(${AWK} '/(DIST|PORT)VERSION=.*/{print $2}' "${PORTPATH}/Makefile")
readonly SIGNED=$(${CAT} "/usr/home/${USER}/.gitmessage")
readonly FULLPORT="${CATEGORY}/${PORT}"

if [ -n "${COMMIT}" ]; then
	readonly MESSAGE="${FULLPORT}: ${COMMIT}"
elif [ "${UPDATE}" = true ]; then
	readonly MESSAGE="${FULLPORT}: Update to ${VERSION}"
else
	readonly MESSAGE="New port: ${FULLPORT}"
fi
readonly EMAIL=$(${GIT} config user.email)
readonly NAME=$(${GIT} config user.name)
(
	cd "${PORTPATH}" || exit

	${GIT} add .
	CHANGES=$(${GIT} diff --cached --name-only | ${WC} -l | ${TR} -d ' ')
	print_info "Adding ${CHANGES} change(s) to repository"
	print_info "Commiting from user ${NAME} <${EMAIL}>"
	${ECHO}
	${GIT} commit -S -m "${MESSAGE} ${PORTSET}
                             ${SIGNED}"

	${ECHO}
	read -rp "Push commit to master? (yes/no) [no]: " OPTION
	OPTION=$(${ECHO} "${OPTION}" | ${TR} "[:upper:]" "[:lower:]")
	if [ "${OPTION}" = yes ] || [ "${OPTION}" = y ]; then
		${GIT} push origin master
	fi
	${ECHO}
)

print_info "Cleaning up temp directory"
${RM} -rf "${TMP}"
