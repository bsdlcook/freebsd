#!/bin/sh

readonly CACHE="$HOME/.local/cache"
readonly SOMACACHE="${CACHE}/soma"

readonly BLUE="\033[34m"
readonly RED="\033[31;1m"
readonly RESET="\033[0m"

update_channels() {
	fetch -qo - "https://somafm.com/channels.json" > "${SOMACACHE}"
}

list_channels() {
	jq < "${SOMACACHE}" -r '.channels | sort_by(.id|tostring) | .[] | .id + " | " + .description'
}

play_channel() {
	readonly CHANNEL=$(jq < "${SOMACACHE}" -r ".channels[].id" | fzf --prompt="open channel: " --border --cycle)
	readonly URL=$(jq < "${SOMACACHE}" -r ".channels | map(select(.id == \"${CHANNEL}\")) | .[].playlists | map(select(.quality == \"highest\")) | limit(1;.[]) | .url")

	if [ -z "${CHANNEL}" ] || [ -z "${URL}" ]; then
		exit 1
	fi
	clear; mpv --no-config "${URL}" 2> /dev/null \
		| awk -v c="${CHANNEL}" -v r="${RED}" -v b="${BLUE}" -v e="${RESET}" '/title/ { s = ""; for (i = 2; i <= NF; i++) s = s $i " "; cmd="(date +'%H:%M:%S')"; cmd | getline d; print d,"|",r,c,e,"| Now playing",b,s,e; close(cmd) }'
}

usage() {
	echo "usage: soma-stream [-u update channels] [-l list channels]"
	exit 1
}

if [ ! -d "${CACHE}" ] || [ ! -f "${SOMACACHE}" ]; then
	mkdir -p "${CACHE}"
	update_channels
fi

if [ $# -lt 1 ]; then
	play_channel
fi

while getopts ":ul" OPT; do
	case "${OPT}" in
		u) update_channels ;;
		l) list_channels ;;
		*) usage ;;
	esac
done
