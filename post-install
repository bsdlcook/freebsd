#!/usr/bin/env bash

declare -a packages=(
	shells/fish
	editors/neovim
	misc/vifm
	graphics/ImageMagick6 
	graphics/feh
	graphics/zathura
	graphics/zathura-pdf-mupdf
	audio/cmus
	sysutils/tmux 
	sysutils/htop 
	sysutils/neofetch
	sysutils/dunst
	www/firefox
	x11-fonts/nerd-fonts
	x11/xorg
	x11/xinit
	x11/libX11
	x11/libXau
	x11/libxcb
	x11/libXdmcp
	x11/libXext
	x11/libXinerama
	x11/xdotool
	devel/dbus
	devel/ccache-static
)

banner()
{
	cat << "EOF"
	       ,        ,
              /(        )`
              \ \___   / |
              /- _  `-/  '
             (/\/ \ \   /\		
             / /   | `    \	
             O O   ) /    |
             `-^--'`<     '
            (_.)  _  )   /
             `.___/`    /
               `-----' /
  <----.     __ / __   \
  <----|====O)))==) \) /====
  <----'    `--' `.__,' \
               |        |    Lewis' FreeBSD post-installation setup script.
                \       /	   Version 1.
           ______( (_  / \______
         ,'  ,-----'   |        \     - gitlab.com/bitw/fbsd
         `--{__________)        \/    
EOF
}

update_repo()
{
	printf "\nUpdating package metadata: "
	doas pkg update &>/dev/null
	printf "Passed.\n"
}

check_root()
{
	printf "\nTesting user permissions: "
	[ "$(id -u)" -eq 0 ] && printf "Error: Please re-run this script as a non-privileged user.\n" && exit 1
	printf "Passed.\n"
}

check_doas()
{
	printf "Testing doas permissions: "
	[ -z "$(pkg info -x security/doas 2>/dev/null | head -n1)" ] && \
		printf "Error: Please install doas by typing: 'pkg install security/doas' with a privileged user; after add your user account with the command: echo 'permit nopass your_user as root' | tee -s /usr/local/etc/doas.conf - then re-run the script.\n" && exit  1
	printf "Passed.\n"
}

check_package()
{
	printf "   - %s: " "$1"
	if [ -z "$(pkg info -x "$1" 2>/dev/null | head -n1)" ]; then
		printf "Not installed... "
		doas pkg install -y "$1" &>/dev/null
		printf "Passed.\n"
	else
		printf "Passed.\n"
	fi

}

install_packages()
{
	printf "\nInstalling %s supplied packages:\n" "${#packages[@]}"
	for package in ${packages[*]}; do
		check_package "$package"		
	done
}

set_shell()
{
	printf "\nSetting default shell:\n"
	chsh -s "$(command -v fish)"
}

check_dein()
{
	printf "\nChecking for dein: "
	if [ ! -d ~/.cache/dein ]; then
		printf "Not installed. Downloading setup script. "
		fetch -qo - https://raw.githubusercontent.com/Shougo/dein.vim/master/bin/installer.sh | bash -s "$HOME/.cache/dein" &>/dev/null
		printf "Passed.\n"
	else
		printf "Passed.\n"
	fi
}

dbus_setup()
{
	printf "\nSetting dbus services:\n"
	dbus-uuidgen | doas tee /etc/machine-id >/dev/null
	doas sysrc dbus_enable="YES"
	doas sysrc hald_enable="YES"
}

copy_configs()
{
	printf "\nCopying configuration files: "
	cp -fR {.config,.scripts,.suckless,.xinitrc,.tmux.conf} "$HOME" &>/dev/null 	
	printf "Passed.\n"
}

symlink_scripts()
{
	printf "\nSymlinking scripts: "
	doas ln -s "$HOME/.scripts/"{open-stream,screenshot} /usr/local/bin 2>/dev/null
	printf "Passed.\n "
}

compile_suckless()
{
	printf "\nCompiling suckless utilities: "
	doas make CC="ccache cc" install clean -C "$HOME/.suckless/dwm" &>/dev/null
	doas make CC="ccache cc" install clean -C "$HOME/.suckless/st"  &>/dev/null
	doas make CC="ccache cc" install clean -C "$HOME/.suckless/dmenu" &>/dev/null
	printf "Passed.\n\nSetup done. Please reboot your system to finalize the changes.\n"
}

main()
{
	banner
	check_root
	check_doas
	update_repo
	install_packages
	check_dein
	set_shell
	dbus_setup
	copy_configs
	symlink_scripts
	compile_suckless
}

main "$@"
